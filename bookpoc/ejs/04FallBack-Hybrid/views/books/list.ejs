<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Hybrid Version</title>
    <style>
        table, th, td {
            border: 1px solid black;
            border-collapse: collapse;
        }
        th, td {
            padding: 5px;
        }
        a { cursor: pointer; color: blue; }
        a:hover,a.hover { text-decoration: underline; }
    </style>
</head>
<body>
<a href="/logout">Logout</a><br><br>
<div id="editView" style="display:none;"></div>
<div id="listView">
<table>
    <tr>
        <th>ID</th>
        <th>Title</th>
        <th>Author</th>
        <th>Price</th>
        <th></th>
    </tr>
    <% books.forEach(function(book) { %>
    <tr id='display<%= book.id %>'>
        <td><%= book.id %></td>
        <td><span id="title<%=book.id%>"><%= book.title %></span></td>
        <td><span id="author<%=book.id%>"><%= book.author %></span></td>
        <td>$<span id="price<%=book.id%>"><%= book.price %></span></td>
        <td><a onclick="return confirmDelete(<%= book.id %>);" href="/books/confirmdelete/<%= book.id %>"><img src='/images/trash.gif' alt='delete' title='Delete' border='0'></a>
            &nbsp;<a onclick="return showEdit(<%= book.id %>);" href="/books/edit/<%= book.id %>"><img src='/images/pencil.gif' alt='edit' title='Edit' border='0'></a>
        </td>
    </tr>

    <% }); %>

</table>
<br>
<a href='/books/add' onclick='return showAdd();' style='text-decoration: none;'><button id="addbutton" value="Add">Add</button></a>
</div>

<!-- Show practical CDN use.  Consider hosting locally -->
<script   src="https://code.jquery.com/jquery-2.2.3.min.js"   integrity="sha256-a23g1Nt4dtEYOj7bR+vTu7+T8VP13humZFBJNIYoEJo="   crossorigin="anonymous"></script>
<script src="/scripts/ejs.min.js"></script>
<script>
    /*  Using Global Scope. Very bad.  If interacting with other scripts, must namespace/modulerize */

    /* Script contents should be in external file, but kept in here for demo purposes */

    /*  variable used to store templates in a cache to prevent multiple requests on static file */
    var templatesCache = [];

    /**
     * Capture back/forward button.
     * When the button is pressed, load the appropriate page and data based on the e.state
     */
    window.addEventListener('popstate', function(e) {
        if (!e.state || !e.state.pageName){
            document.getElementById('editView').style.display = "none";
            document.getElementById('listView').style.display = "";
        }
        else {
            var pageName = e.state.pageName;
            displayTemplate(templatesCache[pageName], e.state);
        }
    });

    /**
     *   Checks if template exists in the cache.  If so, calls displayTemplate.
     *   If not, first loads template and adds it to cache before calling displayTemplate.
     */
    function loadTemplate(name, data) {
        addToHistory(name, data);

        /* Check template cache to see if template has been loaded.  If so, immediately call displayTemplate() */
        if (templatesCache[name]) {
            displayTemplate(templatesCache[name], data);
        }
        else {
            /* If template is not in cache, use Ajax to fetch template, then store in cache and call displayTemplate() */
            $.get('/views/books/' + name + '.ejs', function(template) {
                templatesCache[name] = template;
                displayTemplate(template, data);
            });
        }
    }

    /**
     * Updates the data object to include the name of the page
     * Adds the request to history
     * Use current page name with hash to avoid 404s.
     * Could use node to reroute other paths if desired
     * Could add in function on load to check status to allow bookmarking.
     */
    function addToHistory(name, data){
        data = data || {};
        data.pageName = name;
        history.pushState(data, null, "/books#" + name);
    }

    function loadList(){
        window.location = 'http://localhost:3000/books';
    }

    /**
     * Takes template string and data and uses EJS to render them together.
     * Then displays the new HTML inside of the display div.
     */
    function displayTemplate(template, data) {
        var snippet = ejs.render(template, data);

        document.getElementById('listView').style.display = "none";
        document.getElementById('editView').style.display = "";
        document.getElementById('editView').innerHTML = snippet;
    }

    /**
     *  Displays the confirm delete page for the passed in book.
     */
    function confirmDelete(id) {
        var title = document.getElementById('title' + id).innerHTML;
        var book = {id: id, title: title};
        loadTemplate('delete', {book: book});
        return false;
    }

    /**
     *  Uses Ajax to get delete the book from the server.  Calls loadList on success.
     */
    function deleteBook(id) {
        $.ajax({
            url: '/api/books/' + id,
            type: 'DELETE',
            success: function(res) {
                loadList();
            }
        });
    }

    /**
     *  Displays the add book page.
     */
    function showAdd() {
        loadTemplate('add');
        return false;
    }

    /**
     *  Uses Ajax to add the new book from the server.  Calls loadList on success.
     */
    function addBook() {
        var title = document.getElementById('title');
        var author = document.getElementById('author');
        var price = document.getElementById('price');
        $.ajax({
            url: '/api/books/',
            data: 'title=' + title.value + '&author=' + author.value + '&price=' + price.value,
            type: 'POST',
            success: function(res) {
                loadList();
            }
        });
    }

    /**
     *  Displays the edit book page for the passed in book.
     */
    function showEdit(id) {
        var title = document.getElementById('title' + id).innerHTML;
        var author = document.getElementById('author' + id).innerHTML;
        var price = document.getElementById('price' + id).innerHTML;
        var book = {id: id, title: title, author: author, price: price};
        loadTemplate('edit', {book: book});
        return false;
    }

    /**
     *  Uses Ajax to get update the book on the server.  Calls loadList on success.
     */
    function updateBook(id) {
        var title = document.getElementById('edittitle' + id).value;
        var author = document.getElementById('editauthor' + id).value;
        var price = document.getElementById('editprice' + id).value;
        $.ajax({
            url: '/api/books/' + id,
            data: 'title=' + title + '&author=' + author + '&price=' + price,
            type: 'PUT',
            success: function(res) {
                loadList();
            }
        });
    }

</script>
</body>
</html>